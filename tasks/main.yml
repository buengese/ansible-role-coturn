---
- name: Gather variables for each operating system
  ansible.builtin.include_vars: "{{ lookup('first_found', coturn_variables) }}"

- name: Update apt cache
  ansible.builtin.apt:
    cache_valid_time: 3600
    update_cache: true
  register: _pre_update_apt_cache
  until: _pre_update_apt_cache is succeeded
  when:
    - ansible_pkg_mgr == "apt"

- name: install coturn
  ansible.builtin.package:
    pkg: "{{ coturn_pkg }}"
    state: present

- name: Give coturn access to TLS cert
  ansible.builtin.user:
    name: turnserver
    groups: "{{ coturn_tls_group }}"
    append: true
  when: coturn_tls and coturn_tls_group is defined

- name: ensure coturn is enabled
  ansible.builtin.lineinfile:
    dest: /etc/default/coturn
    line: TURNSERVER_ENABLED=1
    regexp: "^#?TURNSERVER_ENABLED="
  when: ansible_os_family == 'Debian'

- name: Create parameters for Diffieâ€“Hellman (could take a while)
  ansible.builtin.command: "openssl dhparam -out /etc/coturn-dh-{{ coturn_dhparam_length }}.pem {{ coturn_dhparam_length }}"
  args:
    creates: /etc/coturn-dh-{{ coturn_dhparam_length }}.pem
  when: coturn_tls
  notify: restart coturn

- name: configure coturn
  ansible.builtin.template:
    dest: "{{ coturn_config }}"
    src: turnserver.conf.j2
    owner: root
    group: root
    mode: 0644
  notify: restart coturn

- when: ansible_service_mgr == "systemd"
  import_tasks: systemd.yml

- name: reload systemd and restart coturn if necessary
  ansible.builtin.meta: flush_handlers

- name: start coturn
  ansible.builtin.service:
    name: coturn
    state: started

- name: enable coturn
  ansible.builtin.service:
    name: coturn
    enabled: true

- include_tasks: goss.yml
  tags:
    - goss
